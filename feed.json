{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "白山",
  "home_page_url": "https://hbuecx.com/fontEnd/",
  "feed_url": "https://hbuecx.com/fontEnd/feed.json",
  "description": "前端知识体系图谱",
  "author": {
    "name": "白山"
  },
  "items": [
    {
      "title": "BFC",
      "url": "https://hbuecx.com/fontEnd/css/BFC/",
      "id": "https://hbuecx.com/fontEnd/css/BFC/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "CSS",
      "url": "https://hbuecx.com/fontEnd/css/",
      "id": "https://hbuecx.com/fontEnd/css/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "盒子模型",
      "url": "https://hbuecx.com/fontEnd/css/box/",
      "id": "https://hbuecx.com/fontEnd/css/box/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "div垂直居中",
      "url": "https://hbuecx.com/fontEnd/css/center/",
      "id": "https://hbuecx.com/fontEnd/css/center/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "层叠上下文",
      "url": "https://hbuecx.com/fontEnd/css/context/",
      "id": "https://hbuecx.com/fontEnd/css/context/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "flex布局",
      "url": "https://hbuecx.com/fontEnd/css/flex/",
      "id": "https://hbuecx.com/fontEnd/css/flex/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "浮动",
      "url": "https://hbuecx.com/fontEnd/css/float/",
      "id": "https://hbuecx.com/fontEnd/css/float/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "圣杯/双飞翼布局",
      "url": "https://hbuecx.com/fontEnd/css/layout/",
      "id": "https://hbuecx.com/fontEnd/css/layout/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "CSS样式隔离",
      "url": "https://hbuecx.com/fontEnd/css/module/",
      "id": "https://hbuecx.com/fontEnd/css/module/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "CSS新特性",
      "url": "https://hbuecx.com/fontEnd/css/newFeatures/",
      "id": "https://hbuecx.com/fontEnd/css/newFeatures/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "CSS性能优化",
      "url": "https://hbuecx.com/fontEnd/css/performance/",
      "id": "https://hbuecx.com/fontEnd/css/performance/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "position",
      "url": "https://hbuecx.com/fontEnd/css/position/",
      "id": "https://hbuecx.com/fontEnd/css/position/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "CSS选择器及优先级",
      "url": "https://hbuecx.com/fontEnd/css/selector/",
      "id": "https://hbuecx.com/fontEnd/css/selector/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "MVC",
      "url": "https://hbuecx.com/fontEnd/designMode/MVC/",
      "id": "https://hbuecx.com/fontEnd/designMode/MVC/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "MVP",
      "url": "https://hbuecx.com/fontEnd/designMode/MVP/",
      "id": "https://hbuecx.com/fontEnd/designMode/MVP/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "MVVM",
      "url": "https://hbuecx.com/fontEnd/designMode/MVVM/",
      "id": "https://hbuecx.com/fontEnd/designMode/MVVM/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "设计模式",
      "url": "https://hbuecx.com/fontEnd/designMode/",
      "id": "https://hbuecx.com/fontEnd/designMode/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "常用设计模式",
      "url": "https://hbuecx.com/fontEnd/designMode/common/",
      "id": "https://hbuecx.com/fontEnd/designMode/common/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "重构",
      "url": "https://hbuecx.com/fontEnd/designMode/reconstitution/",
      "id": "https://hbuecx.com/fontEnd/designMode/reconstitution/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "工程化",
      "url": "https://hbuecx.com/fontEnd/engineering/",
      "id": "https://hbuecx.com/fontEnd/engineering/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "babel原理",
      "url": "https://hbuecx.com/fontEnd/engineering/babel/",
      "id": "https://hbuecx.com/fontEnd/engineering/babel/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "webpack loader机制",
      "url": "https://hbuecx.com/fontEnd/engineering/loader/",
      "id": "https://hbuecx.com/fontEnd/engineering/loader/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "前端微服务",
      "url": "https://hbuecx.com/fontEnd/engineering/microService/",
      "id": "https://hbuecx.com/fontEnd/engineering/microService/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "tree shaking",
      "url": "https://hbuecx.com/fontEnd/engineering/treeShaking/",
      "id": "https://hbuecx.com/fontEnd/engineering/treeShaking/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "模块化机制",
      "url": "https://hbuecx.com/fontEnd/engineering/module/",
      "id": "https://hbuecx.com/fontEnd/engineering/module/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "uglify原理",
      "url": "https://hbuecx.com/fontEnd/engineering/uglify/",
      "id": "https://hbuecx.com/fontEnd/engineering/uglify/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "webpack",
      "url": "https://hbuecx.com/fontEnd/engineering/webpack/",
      "id": "https://hbuecx.com/fontEnd/engineering/webpack/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "组件禁用",
      "url": "https://hbuecx.com/fontEnd/guide/disable/",
      "id": "https://hbuecx.com/fontEnd/guide/disable/",
      "summary": "<p>你可以通过设置页面的 Frontmatter，在页面禁用一些功能。</p>\n",
      "content_html": "<p>你可以通过设置页面的 Frontmatter，在页面禁用一些功能。</p>\n\n<p>本页面应当禁用了:</p>\n<ul>\n<li>返回顶部按钮</li>\n<li>路径导航</li>\n<li>页面信息</li>\n<li>评论组件</li>\n<li>页脚</li>\n</ul>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "密码加密的文章",
      "url": "https://hbuecx.com/fontEnd/guide/encrypt/",
      "id": "https://hbuecx.com/fontEnd/guide/encrypt/",
      "content_html": "<h1 id=\"密码加密的文章\"> 密码加密的文章</h1>\n<p>实际的文章内容。</p>\n<p>段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。</p>\n<p>段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "Markdown 增强",
      "url": "https://hbuecx.com/fontEnd/guide/markdown/",
      "id": "https://hbuecx.com/fontEnd/guide/markdown/",
      "summary": "<p><code>vuepress-theme-hope</code> 通过内置 <a href=\"https://vuepress-theme-hope.github.io/md-enhance\" target=\"_blank\" rel=\"noopener noreferrer\">md-enhance</a>，在 Markdown 中启用了更多的语法与新功能。</p>\n",
      "content_html": "<p><code>vuepress-theme-hope</code> 通过内置 <a href=\"https://vuepress-theme-hope.github.io/md-enhance\" target=\"_blank\" rel=\"noopener noreferrer\">md-enhance</a>，在 Markdown 中启用了更多的语法与新功能。</p>\n\n<h2 id=\"一键启用\"> 一键启用</h2>\n<p>你可以设置 <code>themeconfig.mdEnhance.enableAll</code> 启用 <a href=\"https://vuepress-theme-hope.github.io/md-enhance\" target=\"_blank\" rel=\"noopener noreferrer\">md-enhance</a> 插件的所有功能。</p>\n<div><div><br><br><div>&nbsp;</div><div>&nbsp;</div><div>&nbsp;</div><br><br><br></div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>\n  themeConfig<span>:</span> <span>{</span>\n    mdEnhance<span>:</span> <span>{</span>\n      enableAll<span>:</span> <span>true</span><span>,</span>\n    <span>}</span><span>,</span>\n  <span>}</span><span>,</span>\n<span>}</span><span>;</span>\n</code></pre><div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id=\"新增的更多语法\"> 新增的更多语法</h2>\n<h3 id=\"上下角标\"> 上下角标</h3>\n<p>19<sup>th</sup> H<sub>2</sub>O</p>\n<details><summary>代码</summary>\n<div><pre><code>19^th^ H<span><span>~</span><span>2</span><span>~</span></span>O\n</code></pre>\n<div><span>1</span><br></div></div></details>\n<ul>\n<li><a href=\"https://vuepress-theme-hope.github.io/zh/guide/markdown/sup-sub/\" target=\"_blank\" rel=\"noopener noreferrer\">点击查看</a></li>\n</ul>\n<h3 id=\"自定义对齐\"> 自定义对齐</h3>\n<div>\n<p>我是居中的</p>\n</div>\n<div>\n<p>我在右对齐</p>\n</div>\n<details><summary>代码</summary>\n<div><pre><code>::: center\n\n我是居中的\n\n:::\n\n::: right\n\n我在右对齐\n\n:::\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div></details>\n<ul>\n<li><a href=\"https://vuepress-theme-hope.github.io/zh/guide/markdown/align/\" target=\"_blank\" rel=\"noopener noreferrer\">点击查看</a></li>\n</ul>\n<h3 id=\"脚注\"> 脚注</h3>\n<p>此文字有脚注<sup></sup>.</p>\n<details><summary>代码</summary>\n<div><pre><code>此文字有脚注[^first].\n\n<span><span>[</span><span>^first</span><span>]</span><span>:</span> 这是脚注内容</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div></details>\n<ul>\n<li><a href=\"https://vuepress-theme-hope.github.io/zh/guide/markdown/footnote/\" target=\"_blank\" rel=\"noopener noreferrer\">点击查看</a></li>\n</ul>\n<h3 id=\"标记\"> 标记</h3>\n<p>你可以标记 <mark>重要的内容</mark> 。</p>\n<details><summary>代码</summary>\n<div><pre><code>你可以标记 ==重要的内容== 。\n</code></pre>\n<div><span>1</span><br></div></div></details>\n<ul>\n<li><a href=\"https://vuepress-theme-hope.github.io/zh/guide/markdown/mark/\" target=\"_blank\" rel=\"noopener noreferrer\">点击查看</a></li>\n</ul>\n<h3 id=\"流程图\"> 流程图</h3>\n<p>@flowstart\ncond=&gt;condition: Process?\nprocess=&gt;operation: Process\ne=&gt;end: End</p>\n<p>cond(yes)-&gt;process-&gt;e\ncond(no)-&gt;e\n@flowend</p>\n<details><summary>代码</summary>\n<div><pre><code>@flowstart\ncond=>condition: Process?\nprocess=>operation: Process\ne=>end: End\n\ncond(yes)->process->e\ncond(no)->e\n@flowend\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div></details>\n<ul>\n<li><a href=\"https://vuepress-theme-hope.github.io/zh/guide/markdown/flowchart/\" target=\"_blank\" rel=\"noopener noreferrer\">点击查看</a></li>\n</ul>\n<h3 id=\"tex-语法\"> Tex 语法</h3>\n<p class='katex-block'><span><span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span><span></span><span><span><span><span style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span style=\"height:3em;\"></span><span><span style=\"margin-right:0.05556em;\">∂</span><span><span style=\"margin-right:0.03588em;\">ω</span><span><span><span><span style=\"height:0.590392em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span style=\"height:3em;\"></span><span style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span style=\"height:3em;\"></span><span><span><span style=\"margin-right:0.05556em;\">∂</span><span><span><span><span style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style=\"height:0.686em;\"><span></span></span></span></span></span><span></span></span><span style=\"margin-right:0.16666666666666666em;\"></span><span><span style=\"top:0em;\"><span>(</span></span><span><span></span><span><span><span><span style=\"height:1.341392em;\"><span style=\"top:-2.314em;\"><span style=\"height:3em;\"></span><span><span style=\"margin-right:0.03588em;\">ω</span></span></span><span style=\"top:-3.23em;\"><span style=\"height:3em;\"></span><span style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span style=\"height:3em;\"></span><span><span><span style=\"margin-right:0.03588em;\">y</span><span><span><span><span style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span><span style=\"margin-right:0.03588em;\">ω</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style=\"height:0.686em;\"><span></span></span></span></span></span><span></span></span><span style=\"top:0em;\"><span>)</span></span></span><span style=\"margin-right:0.2777777777777778em;\"></span><span>=</span><span style=\"margin-right:0.2777777777777778em;\"></span></span><span><span style=\"height:3.027669em;vertical-align:-1.277669em;\"></span><span><span style=\"top:0em;\"><span>(</span></span><span><span></span><span><span><span><span style=\"height:1.341392em;\"><span style=\"top:-2.314em;\"><span style=\"height:3em;\"></span><span><span style=\"margin-right:0.03588em;\">ω</span></span></span><span style=\"top:-3.23em;\"><span style=\"height:3em;\"></span><span style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span style=\"height:3em;\"></span><span><span><span style=\"margin-right:0.03588em;\">y</span><span><span><span><span style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span><span style=\"margin-right:0.03588em;\">ω</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style=\"height:0.686em;\"><span></span></span></span></span></span><span></span></span><span style=\"top:0em;\"><span>)</span></span></span><span style=\"margin-right:0.16666666666666666em;\"></span><span><span style=\"top:0em;\"><span>{</span></span><span>(</span><span>lo<span style=\"margin-right:0.01389em;\">g</span></span><span style=\"margin-right:0.16666666666666666em;\"></span><span style=\"margin-right:0.03588em;\">y</span><span><span>)</span><span><span><span><span style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span><span style=\"margin-right:0.2222222222222222em;\"></span><span>+</span><span style=\"margin-right:0.2222222222222222em;\"></span><span><span><span><span style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span style=\"height:3.05em;\"></span><span><span><span>i</span><span>=</span><span>1</span></span></span></span><span style=\"top:-3.050005em;\"><span style=\"height:3.05em;\"></span><span><span>∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span style=\"height:3.05em;\"></span><span><span style=\"margin-right:0.02778em;\">r</span></span></span></span><span>​</span></span><span><span style=\"height:1.277669em;\"><span></span></span></span></span></span><span style=\"margin-right:0.16666666666666666em;\"></span><span><span></span><span><span><span><span style=\"height:1.5016639999999999em;\"><span style=\"top:-2.314em;\"><span style=\"height:3em;\"></span><span><span><span style=\"margin-right:0.03588em;\">ω</span><span><span><span><span style=\"height:0.750664em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span>i</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span style=\"height:3em;\"></span><span style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span style=\"height:3em;\"></span><span><span>(</span><span>−</span><span>1</span><span><span>)</span><span><span><span><span style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span>i</span></span></span></span></span></span></span></span><span style=\"margin-right:0.02778em;\">r</span><span style=\"margin-right:0.16666666666666666em;\"></span><span>⋯</span><span style=\"margin-right:0.16666666666666666em;\"></span><span>(</span><span style=\"margin-right:0.02778em;\">r</span><span style=\"margin-right:0.2222222222222222em;\"></span><span>−</span><span style=\"margin-right:0.2222222222222222em;\"></span><span>i</span><span style=\"margin-right:0.2222222222222222em;\"></span><span>+</span><span style=\"margin-right:0.2222222222222222em;\"></span><span>1</span><span>)</span><span>(</span><span>lo<span style=\"margin-right:0.01389em;\">g</span></span><span style=\"margin-right:0.16666666666666666em;\"></span><span style=\"margin-right:0.03588em;\">y</span><span><span>)</span><span><span><span><span style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span><span style=\"margin-right:0.02778em;\">r</span><span>−</span><span>i</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style=\"height:0.686em;\"><span></span></span></span></span></span><span></span></span><span style=\"top:0em;\"><span>}</span></span></span></span></span></span></span></p>\n<details><summary>代码</summary>\n<div><pre><code>$$\n\\frac {\\partial^r} {\\partial \\omega^r} \\left(\\frac {y^{\\omega}} {\\omega}\\right)\n= \\left(\\frac {y^{\\omega}} {\\omega}\\right) \\left\\{(\\log y)^r + \\sum_{i=1}^r \\frac {(-1)^i r \\cdots (r-i+1) (\\log y)^{r-i}} {\\omega^i} \\right\\}\n$$\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div></details>\n<ul>\n<li><a href=\"https://vuepress-theme-hope.github.io/zh/guide/markdown/tex/\" target=\"_blank\" rel=\"noopener noreferrer\">点击查看</a></li>\n</ul>\n<h3 id=\"代码案例\"> 代码案例</h3>\n\n          <div\n            id=\"code-demo-694c01a6\"\n           \n  \n data-title=\"%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%20Demo\"\n\n            data-code=\"%7B%22html%22%3A%22%3Ch1%3E%E7%99%BD%E5%B1%B1%3C%2Fh1%3E%5Cn%3Cp%3E%3Cspan%20id%3D%5C%22very%5C%22%3E%E5%8D%81%E5%88%86%3C%2Fspan%3E%20%E5%B8%85%3C%2Fp%3E%5Cn%22%2C%22js%22%3A%22document.querySelector(%5C%22%23very%5C%22).addEventListener(%5C%22click%5C%22%2C%20()%20%3D%3E%20%7B%5Cn%20%20alert(%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22)%3B%5Cn%7D)%3B%5Cn%22%2C%22css%22%3A%22span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%22%7D\"\n          >\n              <div>\n                \n              </div>\n              <div>\n                <div>\n<div><pre><code><span><span><span>&lt;</span>h1</span><span>></span></span>白山<span><span><span>&lt;/</span>h1</span><span>></span></span>\n<span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;</span>span</span> <span>id</span><span><span>=</span><span>\"</span>very<span>\"</span></span><span>></span></span>十分<span><span><span>&lt;/</span>span</span><span>></span></span> 帅<span><span><span>&lt;/</span>p</span><span>></span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><div><pre><code>document<span>.</span><span>querySelector</span><span>(</span><span>\"#very\"</span><span>)</span><span>.</span><span>addEventListener</span><span>(</span><span>\"click\"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>\n  <span>alert</span><span>(</span><span>\"十分帅\"</span><span>)</span><span>;</span>\n<span>}</span><span>)</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>span</span> <span>{</span>\n  <span>color</span><span>:</span> red<span>;</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div>\n            </div>\n          </div>\n          \n        </div>\n<details><summary>代码</summary>\n<div><pre><code>::: demo 一个普通 Demo\n\n<span><span>```</span><span>html</span>\n<span><span><span><span>&lt;</span>h1</span><span>></span></span>白山<span><span><span>&lt;/</span>h1</span><span>></span></span>\n<span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;</span>span</span> <span>id</span><span><span>=</span><span>\"</span>very<span>\"</span></span><span>></span></span>十分<span><span><span>&lt;/</span>span</span><span>></span></span> 帅<span><span><span>&lt;/</span>p</span><span>></span></span></span>\n<span>```</span></span>\n\n<span><span>```</span><span>js</span>\n<span>document<span>.</span><span>querySelector</span><span>(</span><span>\"#very\"</span><span>)</span><span>.</span><span>addEventListener</span><span>(</span><span>\"click\"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>\n  <span>alert</span><span>(</span><span>\"十分帅\"</span><span>)</span><span>;</span>\n<span>}</span><span>)</span><span>;</span></span>\n<span>```</span></span>\n\n<span><span>```</span><span>css</span>\n<span><span>span</span> <span>{</span>\n  <span>color</span><span>:</span> red<span>;</span>\n<span>}</span></span>\n<span>```</span></span>\n\n:::\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div></details>\n\n          <div\n            id=\"code-demo-4a4e1f5b\"\n           \n  data-type=\"react\"\n data-title=\"%E4%B8%80%E4%B8%AA%20React%20Demo\"\n\n            data-code=\"%7B%22js%22%3A%22export%20default%20class%20App%20extends%20React.Component%20%7B%5Cn%20%20constructor(props)%20%7B%5Cn%20%20%20%20super(props)%3B%5Cn%20%20%20%20this.state%20%3D%20%7B%20message%3A%20%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22%20%7D%3B%5Cn%20%20%7D%5Cn%20%20render()%20%7B%5Cn%20%20%20%20return%20(%5Cn%20%20%20%20%20%20%3Cdiv%20className%3D%5C%22box-react%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%E7%99%BD%E5%B1%B1%20%3Cspan%3E%7Bthis.state.message%7D%3C%2Fspan%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20)%3B%5Cn%20%20%7D%5Cn%7D%5Cn%22%2C%22css%22%3A%22.box-react%20span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%22%7D\"\n          >\n              <div>\n                \n              </div>\n              <div>\n                <div>\n<div><pre><code><span>export</span> <span>default</span> <span>class</span> <span>App</span> <span>extends</span> <span>React<span>.</span>Component</span> <span>{</span>\n  <span>constructor</span><span>(</span><span>props</span><span>)</span> <span>{</span>\n    <span>super</span><span>(</span>props<span>)</span><span>;</span>\n    <span>this</span><span>.</span>state <span>=</span> <span>{</span> message<span>:</span> <span>\"十分帅\"</span> <span>}</span><span>;</span>\n  <span>}</span>\n  <span>render</span><span>(</span><span>)</span> <span>{</span>\n    <span>return</span> <span>(</span>\n      <span>&lt;</span>div className<span>=</span><span>\"box-react\"</span><span>></span>\n        白山 <span>&lt;</span>span<span>></span><span>{</span><span>this</span><span>.</span>state<span>.</span>message<span>}</span><span>&lt;</span><span>/</span>span<span>></span>\n      <span>&lt;</span><span>/</span>div<span>></span>\n    <span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><div><pre><code><span>.box-react span</span> <span>{</span>\n  <span>color</span><span>:</span> red<span>;</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div>\n            </div>\n          </div>\n          \n        </div>\n<details><summary>代码</summary>\n<div><pre><code>::: demo [react] 一个 React Demo\n\n<span><span>```</span><span>js</span>\n<span><span>export</span> <span>default</span> <span>class</span> <span>App</span> <span>extends</span> <span>React<span>.</span>Component</span> <span>{</span>\n  <span>constructor</span><span>(</span><span>props</span><span>)</span> <span>{</span>\n    <span>super</span><span>(</span>props<span>)</span><span>;</span>\n    <span>this</span><span>.</span>state <span>=</span> <span>{</span> message<span>:</span> <span>\"十分帅\"</span> <span>}</span><span>;</span>\n  <span>}</span>\n  <span>render</span><span>(</span><span>)</span> <span>{</span>\n    <span>return</span> <span>(</span>\n      <span>&lt;</span>div className<span>=</span><span>\"box-react\"</span><span>></span>\n        白山 <span>&lt;</span>span<span>></span><span>{</span><span>this</span><span>.</span>state<span>.</span>message<span>}</span><span>&lt;</span><span>/</span>span<span>></span>\n      <span>&lt;</span><span>/</span>div<span>></span>\n    <span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span></span>\n<span>```</span></span>\n\n<span><span>```</span><span>css</span>\n<span><span>.box-react span</span> <span>{</span>\n  <span>color</span><span>:</span> red<span>;</span>\n<span>}</span></span>\n<span>```</span></span>\n\n:::\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div></details>\n\n          <div\n            id=\"code-demo-bcebf446\"\n           \n  data-type=\"vue\"\n data-title=\"%E4%B8%80%E4%B8%AA%20Vue%20Demo\"\n\n            data-code=\"%7B%22vue%22%3A%22%3Ctemplate%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box-vue%5C%22%3E%5Cn%20%20%20%20%E7%99%BD%E5%B1%B1%20%3Cspan%3E%7B%7B%20message%20%7D%7D%3C%2Fspan%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Ftemplate%3E%5Cn%3Cscript%3E%5Cnexport%20default%20%7B%5Cn%20%20data%3A%20()%20%3D%3E%20(%7B%20message%3A%20%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22%20%7D)%2C%5Cn%7D%3B%5Cn%3C%2Fscript%3E%5Cn%3Cstyle%3E%5Cn.box-vue%20span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%3C%2Fstyle%3E%5Cn%22%7D\"\n          >\n              <div>\n                \n              </div>\n              <div>\n                <div>\n<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>\n  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>\"</span>box-vue<span>\"</span></span><span>></span></span>\n    白山 <span><span><span>&lt;</span>span</span><span>></span></span>{{ message }}<span><span><span>&lt;/</span>span</span><span>></span></span>\n  <span><span><span>&lt;/</span>div</span><span>></span></span>\n<span><span><span>&lt;/</span>template</span><span>></span></span>\n<span><span><span>&lt;</span>script</span><span>></span></span><span><span>\n<span>export</span> <span>default</span> <span>{</span>\n  <span>data</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>(</span><span>{</span> message<span>:</span> <span>\"十分帅\"</span> <span>}</span><span>)</span><span>,</span>\n<span>}</span><span>;</span>\n</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>\n<span><span><span>&lt;</span>style</span><span>></span></span><span><span>\n<span>.box-vue span</span> <span>{</span>\n  <span>color</span><span>:</span> red<span>;</span>\n<span>}</span>\n</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>\n            </div>\n          </div>\n          \n        </div>\n<details><summary>代码</summary>\n<div><pre><code>::: demo [vue] 一个 Vue Demo\n\n<span><span>```</span><span>vue</span>\n<span>&lt;template>\n  &lt;div>\n    白山 &lt;span>{{ message }}&lt;/span>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nexport default {\n  data: () => ({ message: \"十分帅\" }),\n};\n&lt;/script>\n&lt;style>\n.box-vue span {\n  color: red;\n}\n&lt;/style></span>\n<span>```</span></span>\n\n:::\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div></details>\n\n          <div\n            id=\"code-demo-764eefe3\"\n           \n  \n data-title=\"%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%20Demo\"\n\n            data-code=\"%7B%22md%22%3A%22%23%20%E6%A0%87%E9%A2%98%5Cn%5Cn%E5%8D%81%E5%88%86%E5%B8%85%5Cn%22%2C%22ts%22%3A%22const%20message%3A%20string%20%3D%20%5C%22%E7%99%BD%E5%B1%B1%5C%22%3B%5Cn%5Cndocument.querySelector(%5C%22h1%5C%22).innerHTML%20%3D%20message%3B%5Cn%22%2C%22scss%22%3A%22h1%20%7B%5Cn%20%20font-style%3A%20italic%3B%5Cn%5Cn%20%20%2B%20p%20%7B%5Cn%20%20%20%20color%3A%20red%3B%5Cn%20%20%7D%5Cn%7D%5Cn%22%7D\"\n          >\n              <div>\n                \n              </div>\n              <div>\n                <div>\n<div><pre><code><span><span>#</span> 标题</span>\n\n十分帅\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>const</span> message<span>:</span> <span>string</span> <span>=</span> <span>\"白山\"</span><span>;</span>\n\ndocument<span>.</span><span>querySelector</span><span>(</span><span>\"h1\"</span><span>)</span><span>.</span>innerHTML <span>=</span> message<span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>h1 </span><span>{</span>\n  <span>font-style</span><span>:</span> italic<span>;</span>\n\n  <span>+ p </span><span>{</span>\n    <span>color</span><span>:</span> red<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div>\n            </div>\n          </div>\n          \n        </div>\n<details><summary>代码</summary>\n<div><pre><code>::: demo 一个普通 Demo\n\n<span><span>```</span><span>md</span>\n<span><span><span>#</span> 标题</span>\n\n十分帅</span>\n<span>```</span></span>\n\n<span><span>```</span><span>ts</span>\n<span><span>const</span> message<span>:</span> <span>string</span> <span>=</span> <span>\"白山\"</span><span>;</span>\n\ndocument<span>.</span><span>querySelector</span><span>(</span><span>\"h1\"</span><span>)</span><span>.</span>innerHTML <span>=</span> message<span>;</span></span>\n<span>```</span></span>\n\n<span><span>```</span><span>scss</span>\n<span><span>h1 </span><span>{</span>\n  <span>font-style</span><span>:</span> italic<span>;</span>\n\n  <span>+ p </span><span>{</span>\n    <span>color</span><span>:</span> red<span>;</span>\n  <span>}</span>\n<span>}</span></span>\n<span>```</span></span>\n\n:::\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div></details>\n<ul>\n<li><a href=\"https://vuepress-theme-hope.github.io/zh/guide/markdown/demo/\" target=\"_blank\" rel=\"noopener noreferrer\">点击查看</a></li>\n</ul>\n<h3 id=\"幻灯片\"> 幻灯片</h3>\n<i>Not supported content</i><details><summary>代码</summary>\n<div><pre><code>@slidestart\n\n<span><span>##</span> 幻灯片 1</span>\n\n一个有文字和 <span>[<span>链接</span>](<span>https://mrhope.site</span>)</span> 的段落\n\n<span>---</span>\n\n<span><span>##</span> 幻灯片 2</span>\n\n<span>-</span> 列表 1\n<span>-</span> 列表 2\n\n<span>---</span>\n\n<span><span>##</span> 幻灯片 3.1</span>\n\n<span><span>```</span><span>js</span>\n<span><span>const</span> a <span>=</span> <span>1</span><span>;</span></span>\n<span>```</span></span>\n\n--\n\n<span><span>##</span> 幻灯片 3.2</span>\n\n$$\nJ(\\theta_0,\\theta_1) = \\sum_{i=0}\n$$\n\n@slideend\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div></details>\n<ul>\n<li><a href=\"https://vuepress-theme-hope.github.io/zh/guide/markdown/presentation/\" target=\"_blank\" rel=\"noopener noreferrer\">点击查看</a></li>\n</ul>\n<h2 id=\"其他语法\"> 其他语法</h2>\n<div><p>自定义标题</p>\n<p>信息容器</p>\n</div>\n<div><p>自定义标题</p>\n<p>提示容器</p>\n</div>\n<div><p>自定义标题</p>\n<p>警告容器</p>\n</div>\n<div><p>自定义标题</p>\n<p>危险容器</p>\n</div>\n<details><summary>自定义标题</summary>\n<p>详情容器</p>\n</details>\n<details><summary>代码</summary>\n<div><pre><code>::: info 自定义标题\n\n信息容器\n\n:::\n\n::: tip 自定义标题\n\n提示容器\n\n:::\n\n::: warning 自定义标题\n\n警告容器\n\n:::\n\n::: danger 自定义标题\n\n危险容器\n\n:::\n\n::: details 自定义标题\n\n详情容器\n\n:::\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></details>\n<hr>\n<section>\n<ol>\n<li id=\"fn1\"><p>这是脚注内容 </p>\n</li>\n</ol>\n</section>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "页面配置",
      "url": "https://hbuecx.com/fontEnd/guide/page/",
      "id": "https://hbuecx.com/fontEnd/guide/page/",
      "content_html": "<h2 id=\"页面信息\"> 页面信息</h2>\n<p>你可以在 Markdown 的 Frontmatter 中设置页面信息。</p>\n<ul>\n<li>\n<p>作者设置为 Ms.Tanabalu。</p>\n</li>\n<li>\n<p>写作时间应为 2021 年 3 月 12 日</p>\n</li>\n<li>\n<p>分类为 “使用指南”</p>\n</li>\n<li>\n<p>标签为 “页面配置” 和 “使用指南”</p>\n</li>\n</ul>\n<h2 id=\"页面内容\"> 页面内容</h2>\n<p>你可以自由在这里书写你的 Markdown。</p>\n<div><p>提示</p>\n<ul>\n<li>\n<p>Markdown 文件夹的图片请使用相对链接 <code>./</code> 进行引用。</p>\n</li>\n<li>\n<p><code>.vuepress/public</code> 文件夹的图片，请使用绝对链接 <code>/</code> 进行引用</p>\n</li>\n</ul>\n</div>\n<p>主题包含了一个自定义徽章章可以使用:</p>\n<blockquote>\n<p>文字结尾应该有深蓝色的 徽章文字 徽章。 <i>Not supported content</i></p>\n</blockquote>\n<h2 id=\"页面结构\"> 页面结构</h2>\n<p>此页面应当包含：</p>\n<ul>\n<li>返回顶部按钮</li>\n<li>路径导航</li>\n<li>评论</li>\n<li>页脚</li>\n</ul>\n",
      "date_published": "2020-01-01T00:00:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "功能介绍",
      "url": "https://hbuecx.com/fontEnd/guide/",
      "id": "https://hbuecx.com/fontEnd/guide/",
      "content_html": "<h1 id=\"功能介绍\"> 功能介绍</h1>\n<ul>\n<li>\n<p><a href=\"./page.html\">页面展示</a></p>\n</li>\n<li>\n<p><a href=\"./markdown.html\">Markdown 展示</a></p>\n</li>\n<li>\n<p><a href=\"./disable.html\">禁用展示</a></p>\n</li>\n<li>\n<p><a href=\"./encrypt.html\">加密展示</a></p>\n</li>\n</ul>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": [
        "使用指南"
      ]
    },
    {
      "title": "项目主页",
      "url": "https://hbuecx.com/fontEnd/home/",
      "id": "https://hbuecx.com/fontEnd/home/",
      "content_html": "<p>这是普通主页的案例。你可以在这里放置你的主体内容。</p>\n<p>配置项的相关说明请见 <a href=\"https://AWhiteMouse.github.io/fontEnd/guide/layout/home/\" target=\"_blank\" rel=\"noopener noreferrer\">首页布局配置</a>。</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "DOM树",
      "url": "https://hbuecx.com/fontEnd/html/DOM/",
      "id": "https://hbuecx.com/fontEnd/html/DOM/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "HTML",
      "url": "https://hbuecx.com/fontEnd/html/",
      "id": "https://hbuecx.com/fontEnd/html/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "浏览器架构",
      "url": "https://hbuecx.com/fontEnd/html/browserArchitecture/",
      "id": "https://hbuecx.com/fontEnd/html/browserArchitecture/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "浏览器运行原理",
      "url": "https://hbuecx.com/fontEnd/html/browserRun/",
      "id": "https://hbuecx.com/fontEnd/html/browserRun/",
      "content_html": "<p>暂无内容</p>\n<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://segmentfault.com/a/1190000022633988\" target=\"_blank\" rel=\"noopener noreferrer\">前端都该懂的浏览器工作原理，你懂了吗？</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "缓存策略",
      "url": "https://hbuecx.com/fontEnd/html/cache/",
      "id": "https://hbuecx.com/fontEnd/html/cache/",
      "content_html": "<p>协商缓存：客户端与服务器协商</p>\n<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://mp.weixin.qq.com/s/y-yajw1GaWLKUdOJo3cbew\" target=\"_blank\" rel=\"noopener noreferrer\">深入理解浏览器的缓存机制</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "跨标签页通信",
      "url": "https://hbuecx.com/fontEnd/html/communication/",
      "id": "https://hbuecx.com/fontEnd/html/communication/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "事件模型",
      "url": "https://hbuecx.com/fontEnd/html/event/",
      "id": "https://hbuecx.com/fontEnd/html/event/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "内存泄漏",
      "url": "https://hbuecx.com/fontEnd/html/memory/",
      "id": "https://hbuecx.com/fontEnd/html/memory/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "history和hash两种路由",
      "url": "https://hbuecx.com/fontEnd/html/router/",
      "id": "https://hbuecx.com/fontEnd/html/router/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "Intro Page",
      "url": "https://hbuecx.com/fontEnd/intro/",
      "id": "https://hbuecx.com/fontEnd/intro/",
      "content_html": "<h1 id=\"intro-page\"> Intro Page</h1>\n<p>Place your introducation and profile here.</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "Javascript",
      "url": "https://hbuecx.com/fontEnd/javascript/",
      "id": "https://hbuecx.com/fontEnd/javascript/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "AST抽象语法树",
      "url": "https://hbuecx.com/fontEnd/javascript/ast/",
      "id": "https://hbuecx.com/fontEnd/javascript/ast/",
      "content_html": "<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://www.cnblogs.com/goloving/p/14078228.html\" target=\"_blank\" rel=\"noopener noreferrer\">浅析AST抽象语法树及如何利用AST转换JS代码</a>.</li>\n<li><a href=\"https://www.cnblogs.com/goloving/p/14023881.html\" target=\"_blank\" rel=\"noopener noreferrer\">浅析代码编译过程</a>.</li>\n<li><a href=\"https://segmentfault.com/a/1190000016231512\" target=\"_blank\" rel=\"noopener noreferrer\">AST抽象语法树——最基础的javascript重点知识，99%的人根本不了解</a>.</li>\n<li><a href=\"https://segmentfault.com/a/1190000013126460\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript到底是解释型语言还是编译型语言?</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "bind的实现",
      "url": "https://hbuecx.com/fontEnd/javascript/bind/",
      "id": "https://hbuecx.com/fontEnd/javascript/bind/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "apply和call",
      "url": "https://hbuecx.com/fontEnd/javascript/call/",
      "id": "https://hbuecx.com/fontEnd/javascript/call/",
      "content_html": "<p>call(null): this执行window</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "深浅拷贝",
      "url": "https://hbuecx.com/fontEnd/javascript/clone/",
      "id": "https://hbuecx.com/fontEnd/javascript/clone/",
      "content_html": "<p>在实际业务开发中经常需要用到拷贝，尤其需要注意的是对于数组和对象的拷贝。</p>\n<p>我们常提到的两个概念：浅拷贝和深拷贝。两个的区别在于拷贝得到的数据与原数据是否存在共用某一个数据块的情况。</p>\n<p>为了更直观的感受浅拷贝与深拷贝的区别，我从<a href=\"https://juejin.cn/post/6844904197595332622\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>借用了如下两张图：</p>\n<ul>\n<li>浅拷贝</li>\n</ul>\n<p><img src=\"https://user-gold-cdn.xitu.io/2020/3/1/170965259fb768fd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<ul>\n<li>深拷贝</li>\n</ul>\n<p><img src=\"https://user-gold-cdn.xitu.io/2020/3/1/1709652a7948d1b8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"\"></p>\n<p>从这两张图中可以清晰地看到，浅拷贝只是复制了某个对象的指针，新旧数据共享了空间；而深拷贝则是开辟了新的空间用来存放复制得到的对象，新旧数据独立使用自己的空间。</p>\n<h2 id=\"浅拷贝\"> 浅拷贝</h2>\n<p>常见的浅拷贝有以下几种：</p>\n<ul>\n<li>直接赋值</li>\n<li>Object.assign</li>\n<li>展开运算符</li>\n<li>数组内置方法：slice、concat</li>\n<li>……</li>\n</ul>\n<p>这里使用选取<code>直接赋值</code>的方式看一看浅拷贝的实现效果：</p>\n\n          <div\n            id=\"code-demo-531389ac\"\n           \n  data-type=\"vue\"\n data-title=\"%E6%B5%85%E6%8B%B7%E8%B4%9Ddemo\"\n\n            data-code=\"%7B%22vue%22%3A%22%3Ctemplate%3E%5Cn%20%20%20%20%3Cdiv%3E%7B%7Borigin%7D%7D%3C%2Fdiv%3E%5Cn%3C%2Ftemplate%3E%5Cn%5Cn%3Cscript%3E%5Cnexport%20default%20%7B%5Cn%20%20%20%20data()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20origin%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20x%3A%207%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%20%20%7D%3B%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20created()%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E6%B5%85%E6%8B%B7%E8%B4%9D%5Cn%20%20%20%20%20%20%20%20this.cloneData%20%3D%20this.origin%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E4%BF%AE%E6%94%B9%E4%BA%86%E6%8B%B7%E8%B4%9D%E5%BE%97%E5%88%B0%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7%E5%80%BC%5Cn%20%20%20%20%20%20%20%20this.cloneData.x%20%3D%2012%3B%5Cn%20%20%20%20%7D%5Cn%7D%5Cn%3C%2Fscript%3E%5Cn%22%7D\"\n          >\n              <div>\n                \n              </div>\n              <div>\n                <div>\n<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>\n    <span><span><span>&lt;</span>div</span><span>></span></span>{{origin}}<span><span><span>&lt;/</span>div</span><span>></span></span>\n<span><span><span>&lt;/</span>template</span><span>></span></span>\n\n<span><span><span>&lt;</span>script</span><span>></span></span><span><span>\n<span>export</span> <span>default</span> <span>{</span>\n    <span>data</span><span>(</span><span>)</span> <span>{</span>\n        <span>return</span> <span>{</span>\n            origin<span>:</span> <span>{</span>\n                x<span>:</span> <span>7</span>\n            <span>}</span><span>,</span>\n        <span>}</span><span>;</span>\n    <span>}</span><span>,</span>\n    <span>created</span><span>(</span><span>)</span> <span>{</span>\n        <span>// 浅拷贝</span>\n        <span>this</span><span>.</span>cloneData <span>=</span> <span>this</span><span>.</span>origin<span>;</span>\n        <span>// 修改了拷贝得到的对象的属性值</span>\n        <span>this</span><span>.</span>cloneData<span>.</span>x <span>=</span> <span>12</span><span>;</span>\n    <span>}</span>\n<span>}</span>\n</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div>\n            </div>\n          </div>\n          \n        </div>\n<p>从demo中可以看到，我们只是修改cloneData的x属性值，但是origin的x属性值居然也发生了更改。</p>\n<p>这就是浅拷贝，浅拷贝带来的隐患也是显而易见的：数据拷贝不彻底，同一个数据源可能被多处同时修改，造成数据污染。</p>\n<p>为了解决这个问题，我们需要让拷贝得到的数据独立支配属于自己的空间，断绝与原数据的关系，这就是深拷贝啦。</p>\n<h2 id=\"深拷贝\"> 深拷贝</h2>\n<p>在一般场景中，比较常用的深拷贝方式是<code>JSON.parse()</code> + <code>JSON.stringify()</code>, 即 <code>JSON.parse(JSON.stringify())</code>。</p>\n<h3 id=\"json-parse-json-stringify\"> JSON.parse(JSON.stringify())</h3>\n<p>这个方法应付一般的业务场景是足够的，但是当遇到一些特殊的数据的时候，会出现这样的或那样的问题：</p>\n<ol>\n<li>拷贝的对象的值中如果有函数、undefined、symbol 这几种类型，经过 JSON.stringify 序列化之后的字符串中这个键值对会消失；</li>\n<li>拷贝 Date 引用类型会变成字符串；</li>\n<li>无法拷贝不可枚举的属性；</li>\n<li>无法拷贝对象的原型链；</li>\n<li>拷贝 RegExp 引用类型会变成空对象；</li>\n<li>对象中含有 NaN、Infinity 以及 -Infinity，JSON 序列化的结果会变成 null；</li>\n<li>无法拷贝对象的循环应用，即对象成环 (obj[key] = obj)；</li>\n<li>直接拷贝 BigInt 会报错。</li>\n</ol>\n<p>那么如何应付<code>JSON.parse(JSON.stringify())</code>处理不了的场景呢？</p>\n<h3 id=\"第三方库\"> 第三方库</h3>\n<p>其实很多第三方库已经帮我们做好了深拷贝的封装，我们直接调用即可：</p>\n<ol>\n<li>lodash.cloneDeep</li>\n<li>Jquery.extend</li>\n<li>immutable.fromJS().toJS()</li>\n<li>……</li>\n</ol>\n<p>有些时候，我们的项目里是没有引入这些第三方库，如果只是为了引入一个深拷贝方法而引入整个库就有些得不偿失了。此时手写拷贝就显得必要了。</p>\n<h2 id=\"手写一个深拷贝\"> 手写一个深拷贝</h2>\n<p>想要手写一个完美无缺的深拷贝是非常困难的，但是也需要尽可能的将自己知道的所有可能影响拷贝的点罗列出来，并一一攻克它。</p>\n<p>以下是手写深拷贝时需要注意的点：</p>\n<ul>\n<li>对象</li>\n<li>数组</li>\n<li>null</li>\n<li>函数（函数可能附带属性）</li>\n<li>RegExp</li>\n<li>Date</li>\n<li>Symbol</li>\n<li>BigInt</li>\n<li>循环引用</li>\n<li>key为Symbol</li>\n<li>……</li>\n</ul>\n<h3 id=\"完整版\"> 完整版</h3>\n<p>代码来源： <a href=\"https://juejin.cn/post/6844904197595332622#heading-13\" target=\"_blank\" rel=\"noopener noreferrer\">https://juejin.cn/post/6844904197595332622#heading-13</a>.</p>\n<div><pre><code><span>function</span> <span>isType</span><span>(</span><span>type</span><span>)</span> <span>{</span>\n    <span>return</span> <span>(</span><span>data</span><span>)</span> <span>=></span> <span>{</span>\n        <span>return</span> <span>Object</span><span>.</span>prototype<span>.</span><span>toString</span><span>.</span><span>call</span><span>(</span>data<span>)</span>\n        <span>.</span><span>match</span><span>(</span><span><span>/</span><span>^\\[object (.*)\\]$</span><span>/</span></span><span>)</span><span>[</span><span>1</span><span>]</span> <span>===</span> type<span>;</span>\n    <span>}</span><span>;</span>\n<span>}</span><span>;</span>\n\n<span>const</span> isRegExp <span>=</span> <span>isType</span><span>(</span><span>'RegExp'</span><span>)</span><span>;</span>\n<span>const</span> isDate <span>=</span> <span>isType</span><span>(</span><span>'Date'</span><span>)</span><span>;</span>\n\n<span>function</span> <span>deepClone</span><span>(</span>obj<span>,</span> hash <span>=</span> <span>new</span> <span>WeakMap</span><span>(</span><span>)</span><span>)</span> <span>{</span>\n    <span>// 如果是null或者undefined我就不进行拷贝操作</span>\n    <span>if</span> <span>(</span>obj <span>===</span> <span>null</span><span>)</span> <span>return</span> obj<span>;</span>\n    <span>if</span> <span>(</span><span>isDate</span><span>(</span>obj<span>)</span><span>)</span> <span>return</span> <span>new</span> <span>Date</span><span>(</span>obj<span>)</span><span>;</span>\n    <span>if</span> <span>(</span><span>isRegExp</span><span>(</span>obj<span>)</span><span>)</span> <span>return</span> <span>new</span> <span>RegExp</span><span>(</span>obj<span>)</span><span>;</span>\n    <span>// 可能是对象或者普通的值  如果是函数的话是不需要深拷贝</span>\n    <span>if</span> <span>(</span><span>typeof</span> obj <span>!==</span> <span>\"object\"</span><span>)</span> <span>return</span> obj<span>;</span>\n    <span>// 是对象的话就要进行深拷贝</span>\n    <span>if</span> <span>(</span>hash<span>.</span><span>get</span><span>(</span>obj<span>)</span><span>)</span> <span>return</span> hash<span>.</span><span>get</span><span>(</span>obj<span>)</span><span>;</span>\n    <span>let</span> cloneObj <span>=</span> <span>new</span> <span>obj<span>.</span>constructor</span><span>(</span><span>)</span><span>;</span>\n    <span>// 找到的是所属类原型上的constructor,而原型上的 constructor指向的是当前类本身</span>\n    hash<span>.</span><span>set</span><span>(</span>obj<span>,</span> cloneObj<span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>let</span> key <span>in</span> obj<span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>obj<span>.</span><span>hasOwnProperty</span><span>(</span>key<span>)</span><span>)</span> <span>{</span>\n            <span>// 实现一个递归拷贝</span>\n            cloneObj<span>[</span>key<span>]</span> <span>=</span> <span>deepClone</span><span>(</span>obj<span>[</span>key<span>]</span><span>,</span> hash<span>)</span><span>;</span>\n        <span>}</span>\n    <span>}</span>\n    <span>return</span> cloneObj<span>;</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div><p>以上深拷贝已几近完美，但仍有两点趋于完善：</p>\n<ol>\n<li>没有拷贝函数的属性；</li>\n<li>没有考虑 key 为 Symbol 的情况。</li>\n</ol>\n<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://juejin.cn/post/6844904197595332622\" target=\"_blank\" rel=\"noopener noreferrer\">浅拷贝与深拷贝</a>.</li>\n</ol>\n<h2 id=\"附\"> 附</h2>\n<ol>\n<li>拷贝元数据示例.</li>\n</ol>\n<div><pre><code><span>const</span> origin <span>=</span> <span>{</span>\n    a<span>:</span> <span>1</span><span>,</span>\n    b<span>:</span> <span>'2'</span><span>,</span>\n    c<span>:</span> <span>{</span>key<span>:</span> <span>4</span><span>}</span><span>,</span>\n    d<span>:</span> <span>[</span><span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>]</span><span>,</span>\n    e<span>:</span> <span>Infinity</span><span>,</span>\n    f<span>:</span> <span>new</span> <span>Date</span><span>(</span><span>)</span><span>,</span>\n    g<span>:</span> <span>new</span> <span>RegExp</span><span>(</span><span>'/*/'</span><span>)</span><span>,</span>\n    h<span>:</span> <span>Symbol</span><span>(</span><span>'1'</span><span>)</span><span>,</span>\n    <span>// i: BigInt(12),</span>\n    <span>j</span><span>:</span> <span>function</span><span>(</span><span>)</span> <span>{</span>\n        console<span>.</span><span>log</span><span>(</span><span>'看我神通'</span><span>)</span>\n    <span>}</span><span>,</span>\n    k<span>:</span> <span>null</span><span>,</span>\n    l<span>:</span> <span>undefined</span><span>,</span>\n    m<span>:</span> <span>NaN</span><span>,</span>\n    n<span>:</span> <span>String</span><span>(</span><span>'23'</span><span>)</span><span>,</span>\n    <span>[</span><span>Symbol</span><span>(</span><span>1</span><span>)</span><span>]</span><span>:</span> <span>'哈哈'</span>\n<span>}</span><span>;</span>\n\n<span>// 易爆栈</span>\n<span>// origin.loop = origin;</span>\n\nObject<span>.</span><span>defineProperty</span><span>(</span>origin<span>,</span> <span>'z'</span><span>,</span> <span>{</span>\n    value<span>:</span> <span>20</span><span>,</span>\n    enumerable<span>:</span> <span>true</span><span>,</span>\n<span>}</span><span>)</span>\n\n<span>const</span> target <span>=</span> <span>deepClone</span><span>(</span>origin<span>)</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div>",
      "image": "https://user-gold-cdn.xitu.io/2020/3/1/170965259fb768fd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "闭包",
      "url": "https://hbuecx.com/fontEnd/javascript/closure/",
      "id": "https://hbuecx.com/fontEnd/javascript/closure/",
      "content_html": "<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://www.cnblogs.com/mingo233/p/13582147.html\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript闭包（内存泄漏、溢出以及内存回收），超直白解析</a>.</li>\n<li>《你不知道的JS》（上卷）.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "跨域",
      "url": "https://hbuecx.com/fontEnd/javascript/cross/",
      "id": "https://hbuecx.com/fontEnd/javascript/cross/",
      "content_html": "<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://mp.weixin.qq.com/s/uGyhnakUUKfF2STa33FkCg\" target=\"_blank\" rel=\"noopener noreferrer\">从面试官角度看一次前端面试经历</a>.</li>\n<li><a href=\"https://segmentfault.com/a/1190000011145364\" target=\"_blank\" rel=\"noopener noreferrer\">前端常见跨域解决方案（全）</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "柯里化",
      "url": "https://hbuecx.com/fontEnd/javascript/currie/",
      "id": "https://hbuecx.com/fontEnd/javascript/currie/",
      "content_html": "<p>http://www.ruanyifeng.com/blog/2017/03/ramda.html</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "立即执行函数",
      "url": "https://hbuecx.com/fontEnd/javascript/executedImmediately/",
      "id": "https://hbuecx.com/fontEnd/javascript/executedImmediately/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "继承",
      "url": "https://hbuecx.com/fontEnd/javascript/extends/",
      "id": "https://hbuecx.com/fontEnd/javascript/extends/",
      "content_html": "<h1 id=\"参考链接\"> 参考链接</h1>\n<ol>\n<li><a href=\"https://www.cnblogs.com/czkolve/p/10849226.html\" target=\"_blank\" rel=\"noopener noreferrer\">es5继承和es6类和继承</a>.</li>\n<li><a href=\"http://keenwon.com/1524.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES5和ES6中的继承</a>.</li>\n<li><a href=\"https://www.jianshu.com/p/72fea052ed05\" target=\"_blank\" rel=\"noopener noreferrer\">ES5继承的六种方式</a>.</li>\n<li><a href=\"https://www.cnblogs.com/annika/p/9073572.html\" target=\"_blank\" rel=\"noopener noreferrer\">详解ES5和ES6的继承</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "浮点数精度",
      "url": "https://hbuecx.com/fontEnd/javascript/float/",
      "id": "https://hbuecx.com/fontEnd/javascript/float/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "generator原理",
      "url": "https://hbuecx.com/fontEnd/javascript/generator/",
      "id": "https://hbuecx.com/fontEnd/javascript/generator/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "事件循环机制",
      "url": "https://hbuecx.com/fontEnd/javascript/loop/",
      "id": "https://hbuecx.com/fontEnd/javascript/loop/",
      "content_html": "<div><p>相关信息</p>\n<p>在异步模式下，创建异步任务主要分为宏任务与微任务两种。ES6 规范中，宏任务（Macrotask） 称为 Task， 微任务（Microtask） 称为 Jobs。<strong><code>宏任务是由宿主（浏览器、Node）发起的，而微任务由 JS 自身发起</code></strong>。</p>\n<div>\n<p>——摘自<a href=\"https://juejin.cn/post/6945319439772434469\" target=\"_blank\" rel=\"noopener noreferrer\">掘金</a></p>\n</div>\n</div>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "new操作符",
      "url": "https://hbuecx.com/fontEnd/javascript/new/",
      "id": "https://hbuecx.com/fontEnd/javascript/new/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "promise原理",
      "url": "https://hbuecx.com/fontEnd/javascript/promise/",
      "id": "https://hbuecx.com/fontEnd/javascript/promise/",
      "content_html": "<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://juejin.cn/post/6945319439772434469\" target=\"_blank\" rel=\"noopener noreferrer\">从一道让我失眠的 Promise 面试题开始，深入分析 Promise 实现细节</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "原型链",
      "url": "https://hbuecx.com/fontEnd/javascript/prototype/",
      "id": "https://hbuecx.com/fontEnd/javascript/prototype/",
      "content_html": "<h2 id=\"参考链接\"> 参考链接</h2>\n<ol>\n<li><a href=\"https://segmentfault.com/a/1190000021232132\" target=\"_blank\" rel=\"noopener noreferrer\">一张图搞定JS原型&amp;原型链</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "作用域",
      "url": "https://hbuecx.com/fontEnd/javascript/scope/",
      "id": "https://hbuecx.com/fontEnd/javascript/scope/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "this的指向",
      "url": "https://hbuecx.com/fontEnd/javascript/this/",
      "id": "https://hbuecx.com/fontEnd/javascript/this/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "数据类型判断",
      "url": "https://hbuecx.com/fontEnd/javascript/typeof/",
      "id": "https://hbuecx.com/fontEnd/javascript/typeof/",
      "content_html": "\n<p>JS是一门弱类型语言，这允许我们使用 <code>var/let/const</code> 等关键字来声明变量，而这些变量本身是不具备具体类型的，它的类型取决于当时所被赋予的数据。</p>\n<p>在某些情况下，我们需要获取数据的具体类型来做一些逻辑业务上的处理。所以对于数据类型的判断，也是前端开发人员的基本功之一。</p>\n<h2 id=\"常见的数据类型判断方法\"> 常见的数据类型判断方法</h2>\n<p>常见的数据类型判断方法主要是以下三种：</p>\n<ul>\n<li>typeof</li>\n<li>instanceof</li>\n<li>Object.prototype.toString</li>\n</ul>\n<p>这三种方案在 <mark>用法</mark> 和 <mark>原理</mark> 上都有着比较大的不同，下面将分别阐述这三种方案。</p>\n<h3 id=\"typeof\"> typeof</h3>\n<p>这里先列举一些示例，请仔细想一下，它们都会打印出什么结果呢？</p>\n<div><pre><code>console<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>1</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>true</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>undefined</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>'null'</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>Symbol</span><span>(</span><span>)</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>BigInt</span><span>(</span><span>10</span><span>)</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>NaN</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>{</span><span>}</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>[</span><span>]</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>new</span> <span>Date</span><span>(</span><span>)</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>null</span><span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> Function<span>)</span><span>;</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> Date<span>)</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p>OK，相信你已经有了自己的答案，对比一下下方的标准答案，看看是否都正确呢？</p>\n<details><summary>点我查看标准答案</summary>\n<div><pre><code>console<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>1</span><span>)</span><span>;</span>             <span>// \"number\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>true</span><span>)</span><span>;</span>          <span>// \"boolean\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>undefined</span><span>)</span><span>;</span>     <span>// \"undefined\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>'null'</span><span>)</span><span>;</span>        <span>// \"string\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>Symbol</span><span>(</span><span>)</span><span>)</span><span>;</span>      <span>// \"symbol\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>BigInt</span><span>(</span><span>10</span><span>)</span><span>)</span><span>;</span>    <span>// \"bigint\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>NaN</span><span>)</span><span>;</span>           <span>// \"number\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>{</span><span>}</span><span>)</span><span>;</span>            <span>// \"object\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>[</span><span>]</span><span>)</span><span>;</span>            <span>// \"object\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>new</span> <span>Date</span><span>(</span><span>)</span><span>)</span><span>;</span>    <span>// \"object\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> <span>null</span><span>)</span><span>;</span>          <span>// \"object\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> Function<span>)</span><span>;</span>      <span>// \"function\"</span>\nconsole<span>.</span><span>log</span><span>(</span><span>typeof</span> Date<span>)</span><span>;</span>          <span>// \"function\"</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div></details>\n<p>你的答案是否完全正确呢？如果完全正确，那就说明你已经在数据类型方面有了良好的认知和基本功。</p>\n<p>如果你不能完全答对，那么也不用担心，接下来将带你打开 <code>typeof</code> 的世界，一起探索关于它的秘密。</p>\n<p>从标准打印结果中可以看到有几项结果</p>\n<h3 id=\"instanceof\"> instanceof</h3>\n<div><pre><code><span>function</span> <span>Driver</span><span>(</span><span>)</span> <span>{</span>\n\n<span>}</span>\n\n<span>function</span> <span>Car</span><span>(</span><span>)</span> <span>{</span>\n\n<span>}</span>\n\n<span>Car</span><span>.</span>prototype <span>=</span> <span>Driver</span><span>.</span>prototype<span>;</span>\n\n<span>const</span> driver <span>=</span> <span>new</span> <span>Driver</span><span>(</span><span>)</span>\n\nconsole<span>.</span><span>log</span><span>(</span>driver <span>instanceof</span> <span>Car</span><span>)</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h3 id=\"object-prototype-tostring\"> Object.prototype.toString</h3>\n<h2 id=\"总结\"> 总结</h2>\n<div><p>提示</p>\n<p>综上所述，总结如下：</p>\n<ol>\n<li>如果判断基本类型，最好使用 <code>typeof</code> 判断。（<code>null</code>需要进行额外的判断）</li>\n<li>如果需要判断一个对象与一个构造函数之间的关系，则使用 <code>instanceof</code> 判断。</li>\n<li>如果需要 <mark>对象</mark> 的具体类型，可以使用 <code>Object.prototype.toString</code>进行判断。</li>\n</ol>\n</div>\n<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://juejin.cn/post/6844904020318879757\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript 的 typeof 原理小记</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "v8垃圾回收机制",
      "url": "https://hbuecx.com/fontEnd/javascript/v8/",
      "id": "https://hbuecx.com/fontEnd/javascript/v8/",
      "content_html": "<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://juejin.cn/post/6844904016325902344\" target=\"_blank\" rel=\"noopener noreferrer\">一文搞懂V8引擎的垃圾回收</a>.</li>\n<li><a href=\"https://juejin.cn/post/6942643533417283591\" target=\"_blank\" rel=\"noopener noreferrer\">从V8角度揭秘你不知道的面试八股文</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "变量提升",
      "url": "https://hbuecx.com/fontEnd/javascript/variableAscension/",
      "id": "https://hbuecx.com/fontEnd/javascript/variableAscension/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "每日学习",
      "url": "https://hbuecx.com/fontEnd/learning/",
      "id": "https://hbuecx.com/fontEnd/learning/",
      "content_html": "<template>\n    <div>\n        <div v-for=\"(learn, index) in learnList\" :key=\"index\">\n            <div>\n                <div>{{learn.time}}</div>\n                <div\n                    v-for=\"(content, contentIndex) in learn.contents\"\n                    :key=\"contentIndex\"\n                   \n                    v-html=\"content\"\n                ></div>\n            </div>\n        </div>\n    </div>\n</template>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "读书笔记",
      "url": "https://hbuecx.com/fontEnd/learning/detail/",
      "id": "https://hbuecx.com/fontEnd/learning/detail/",
      "content_html": "<h2 id=\"_2021-4-22\"> 2021-4-22</h2>\n<h3 id=\"_1-原以为很简单-结果这道-promise-面试题让我失眠好一会\"> 1. <a href=\"https://mp.weixin.qq.com/s/8dbHLelwRcyUlGIEzUTYpw\" target=\"_blank\" rel=\"noopener noreferrer\">原以为很简单，结果这道 Promise 面试题让我失眠好一会</a></h3>\n<p><strong>概述</strong></p>\n<p><strong>关键词</strong></p>\n<p><strong>主要内容</strong></p>\n<p><strong>反思</strong></p>\n<h2 id=\"_2021-4-21\"> 2021-4-21</h2>\n<h3 id=\"_1-前端团队研发效能提升的探索与实践\"> 1. <a href=\"https://mp.weixin.qq.com/s/F2b5nXEKpygX9vCFW1YhYg\" target=\"_blank\" rel=\"noopener noreferrer\">前端团队研发效能提升的探索与实践</a></h3>\n<p><strong>概述</strong></p>\n<p>主要讲述了丁香医生工程化平台【Jarvis】的起源与落地。阐述了在系统搭建过程中遇到的技术和管理问题，以及这些问题都是通过什么方式解决的。</p>\n<p><strong>关键词</strong></p>\n<p><code>Jarvis</code>、<code>研发效能</code>、<code>技术的价值</code></p>\n<p><strong>主要内容</strong></p>\n<p>技术的价值与研发效能</p>\n<ul>\n<li>聚焦于交付质量的「优质」</li>\n<li>聚焦于交付效率的「高效」</li>\n<li>聚焦于交付过程的「持续顺畅」</li>\n<li>聚焦于业务需求价值的「有效价值」</li>\n</ul>\n<p><strong>反思</strong></p>\n<blockquote>\n<ol>\n<li>团队Leader应尽可能地将团队引导到规范化、自动化的道路上。</li>\n<li>自动化会激活技术人员的创造力，一切重复而枯燥的任务都会让技术人员产生疲惫感与焦虑心理。自动化包括：发布自动化、测试自动化、文档自动化以及工作流自动化等。</li>\n<li>还是要多看看外面的世界，才能让自己重新审视自己和团队的弱势，查漏补缺。</li>\n</ol>\n</blockquote>\n<h2 id=\"_2021-4-20\"> 2021-4-20</h2>\n<h3 id=\"_1-小程序与动画的故事\"> 1. <a href=\"https://juejin.cn/post/6949128356499554312\" target=\"_blank\" rel=\"noopener noreferrer\">小程序与动画的故事</a></h3>\n<p><strong>概述</strong></p>\n<p>本文主要讲述小程序中的三种基本动画创建方式，以及如何实现元素滚动到可视区后才开始执行动画效果（实践）</p>\n<p><strong>关键词</strong></p>\n<p><code>onPageScroll</code>、 <code>Taro.createIntersectionObserver</code></p>\n<p><strong>主要内容</strong></p>\n<p>关于实现滚动到可视区的两个关键点</p>\n<ol>\n<li>在元素为滚动到可视区时，既不能执行动画，也不能将元素 <code>display: none</code></li>\n<li>需要实时计算滚动的位置，并与元素的位置进行判断</li>\n</ol>\n<p>滚动到可视区域才开始执行动画的效果</p>\n<ul>\n<li>页面滚动模式：<code>onPageScroll</code></li>\n<li>观察者模式：<code>Taro.createIntersectionObserver</code></li>\n</ul>\n<p><strong>反思</strong></p>\n<blockquote>\n<p>在这篇文章里发现了一个特别有意思的代码写法</p>\n</blockquote>\n<details><summary>一个特别有意思的代码写法</summary>\n<div><pre><code><span>const</span> <span>createPageScroll</span> <span>=</span> <span>function</span><span>(</span><span>page</span><span>)</span> <span>{</span>\n    <span>const</span> env <span>=</span> Taro<span>.</span><span>getEnv</span><span>(</span><span>)</span>\n    <span>let</span> <span>onPageScroll</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span><span>}</span>\n\n    <span>if</span> <span>(</span>env <span>!==</span> Taro<span>.</span><span>ENV_TYPE</span><span>.</span><span>WEB</span><span>)</span> <span>{</span>\n        <span>// 小程序</span>\n        <span>// 先获取到滚动监听事件，然后重写，注入业务回调</span>\n        <span>const</span> prevOnPageScroll <span>=</span> page<span>.</span><span>onPageScroll</span><span>.</span><span>bind</span><span>(</span>page<span>)</span>\n        page<span>.</span><span>onPageScroll</span> <span>=</span> <span>e</span> <span>=></span> <span>{</span>\n            <span>prevOnPageScroll</span><span>(</span>e<span>)</span>\n            <span>onPageScroll</span><span>(</span>e<span>)</span>\n        <span>}</span>\n    <span>}</span> <span>else</span> <span>if</span> <span>(</span>env <span>===</span> Taro<span>.</span><span>ENV_TYPE</span><span>.</span><span>WEB</span><span>)</span> <span>{</span>\n        <span>// H5</span>\n        <span>// 注入业务回调</span>\n        window<span>.</span><span>addEventListener</span><span>(</span><span>\"scroll\"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>\n            <span>onPageScroll</span><span>(</span><span>{</span> scrollTop<span>:</span> window<span>.</span>scrollY <span>}</span><span>)</span>\n        <span>}</span><span>)</span>\n    <span>}</span>\n\n    <span>// 这里返回了一个箭头函数，用于重新对 onPageScroll 赋值</span>\n    <span>return</span> <span>nextOnPageScroll</span> <span>=></span> <span>{</span>\n        onPageScroll <span>=</span> nextOnPageScroll\n    <span>}</span>\n<span>}</span>\n\n<span>listenPageScroll</span> <span>(</span><span>currentPage</span><span>)</span> <span>{</span>\n    <span>// NOTE: 这里传入currentPage，完成页面事件的重新绑定</span>\n    <span>// 这里返回的是一个箭头函数</span>\n    <span>const</span> pageScroll <span>=</span> <span>createPageScroll</span><span>(</span>currentPage<span>)</span>\n    <span>// 再通过传入的回调方法改变源代码中的默认回调，秒啊！</span>\n    <span>pageScroll</span><span>(</span><span>this</span><span>.</span>onScroll<span>)</span>\n\n    <span>// ……有一种面向抽象编程的感觉</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div></details>\n<h2 id=\"_2021-4-10\"> 2021-4-10</h2>\n<h3 id=\"_1-程序员写好技术文章的几点小技巧\"> 1.<a href=\"https://mp.weixin.qq.com/s/muQADgXCEsG4GAy4ot1CNg\" target=\"_blank\" rel=\"noopener noreferrer\">程序员写好技术文章的几点小技巧</a></h3>\n<p><strong>概述</strong></p>\n<p>主要讲述了写作的注意点以及写作技巧。</p>\n<p><strong>关键词</strong></p>\n<p><code>内容</code>、 <code>整理</code></p>\n<p><strong>主要内容</strong></p>\n<ul>\n<li>该不该写\n<ul>\n<li><code>如果你想写一篇爆款文章，但是又觉得没有内容可写，那就不要勉强了，放下笔，合上电脑，有这个时间不如去看书打游戏。</code></li>\n<li>多阅读，多思考，多写作才有源源不断的内容可写</li>\n</ul>\n</li>\n<li>心态\n<ul>\n<li>阅读量不等于文章质量</li>\n<li>内容丰富详实（文章长），是写好一篇文章的必要条件</li>\n</ul>\n</li>\n<li>两种叙事方式\n<ul>\n<li><code>线性叙事，逐步推进</code>：适用于介绍排查问题的过程、分享设计思路、介绍项目的迭代进展。</li>\n<li><code>结构化叙事，层层展开</code>：适用于讲规划、做总结、画大图、介绍一整套技术方案。</li>\n</ul>\n</li>\n</ul>\n<p><strong>反思</strong></p>\n<blockquote>\n<p>看完这篇文章让我有醍醐灌顶的感觉，文章里说的很多坑我都踩过。以前经常有一些写文章的想法，但是又没有足够的内容可写，所以很多文章都是起了个标题，却没有内容可写。以下三点需要特别注意：</p>\n<ol>\n<li><code>如果你想写一篇爆款文章，但是又觉得没有内容可写，那就不要勉强了，放下笔，合上电脑，有这个时间不如去看书打游戏。</code></li>\n<li>保持碎片化记录的习惯</li>\n<li>有了素材之后，平时可以专门练习写作能力，先写一小段话，明确的描述一个观点，然后不断修改</li>\n<li>多放图</li>\n</ol>\n</blockquote>\n<h2 id=\"_2021-4-8\"> 2021-4-8</h2>\n<h3 id=\"_1-美团移动端ui一致性解决方案探索\"> 1. <a href=\"https://mp.weixin.qq.com/s/uS_wLchAXALEAThmU-vVog\" target=\"_blank\" rel=\"noopener noreferrer\">美团移动端UI一致性解决方案探索</a></h3>\n<p><strong>概述</strong></p>\n<p>本文主要讲解了美团外卖团队面临的UI一致性问题及其解决方案；sketch插件的实践步骤</p>\n<p><strong>关键词</strong></p>\n<p><code>积木Plugin</code>、<code>积木Sketch</code>：同步RD与UE组件</p>\n<p><strong>主要内容</strong></p>\n<ul>\n<li>存在的问题\n<ul>\n<li><code>设计层面</code>：由于UI缺乏标准化设计规范，在不同App及不同开发语言平台上设计风格不统一，用户体验不一致；设计资源与代码均缺乏统一管理手段，无法实现积累沉淀，无法适应新业务的开发需求。</li>\n<li><code>开发层面</code>：组件代码实现碎片化，存在多次开发的情况，质量难以保证；各端代码API不统一，维护拓展成本较高，变更主题、适配Dark Mode等需求难以实现。</li>\n<li><code>测试层面</code>：重复走查，频繁回归，每次发版均需验证组件质量。</li>\n<li><code>产品层面</code>：版本迭代效率低，版本需求吞吐量低，不具备业务的快速拓展能力。</li>\n</ul>\n</li>\n<li>解决方案\n<ul>\n<li><code>积木工具链</code>：通过建立包含相同设计元素的统一物料市场，PM通过Axure插件拾取物料市场中的组件产出原型稿；UI/UE通过Sketch插件落地物料市场中的设计规范，产出符合要求的设计稿。未来，希望通过高保真原型输出，可以给中后台项目、非依赖体验项目提供更好的服务体验，赋予产品同学直接向技术侧输出原型稿的能力。</li>\n<li><code>代码组件库（Android、iOS、MRN）</code>：设计稿中的组件与RD代码仓库中组件一一对应。</li>\n<li><code>文档化说明</code>：官网详细描述了代码组件库的集成方式、组件的使用方法，降低开发上手难度，只需要理解接口和职责即可进行业务开发。</li>\n<li><code>定制化设计云协作平台</code>：与美团内部的印迹团队（云协作平台）合作开发，在RD的设计稿中标注了哪些是代码组件库中已有的元素，避免重复开发，同时关联了官网中该组件的使用说明，是代码组件库与官网的纽带。</li>\n</ul>\n</li>\n<li>方案落地举措\n<ul>\n<li>项目小组不能脱离日常需求开发工作</li>\n<li><code>优先选择受视觉因素影响较大、投入产出比高的模块场景进行改造</code></li>\n<li>项目推进由UI同学按版本提出需求，移动端排期并落地实施，由UI统一验收</li>\n<li>建立阶段性目标，并完成最近三期工作的具体规划，定期复盘完成情况，保证项目的持续推进</li>\n</ul>\n</li>\n<li>具体措施\n<ul>\n<li>搭建合适粒度的组件\n<ul>\n<li>控件、组件、业务组件、模板、页面</li>\n</ul>\n</li>\n<li>组件属性可配置\n<ul>\n<li>支持局部元素的展示隐藏</li>\n<li>支持多种样式</li>\n<li>支持业务方配置主题</li>\n</ul>\n</li>\n<li>建立插画库\n<ul>\n<li>统一插画风格</li>\n</ul>\n</li>\n<li>使用Iconfont\n<ul>\n<li>矢量性、可自由变化大小、自由变换颜色、仅需维护一套字体文件</li>\n</ul>\n</li>\n<li>归档图片问题\n<ul>\n<li>解决大量类似图片的问题。<code>可以通过脚本扫描相似图片，根据图片的特征Hash判断图片的相似度，对于相似度高的图片根据UI的建议，保留一张即可</code>。</li>\n</ul>\n</li>\n<li>统一动效</li>\n<li>统一品牌色与效果色</li>\n<li>统一字体与字号</li>\n<li>搭建组件应用示例网站\n<ul>\n<li>便于组件的查阅与调试</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>反思</strong></p>\n<blockquote>\n<ol>\n<li>在我们的项目中同样存在UI一致性问题，但是按照我们团队成员现在人力物力（4人）而言，想要完成类似的巨大工程，几乎是不可能。</li>\n<li>但是其中也有一些值得我们学习的地方，比如：<code>搭建合适粒度的组件</code>、 <code>使用Iconfont</code>、 <code>归档图片问题</code>。</li>\n</ol>\n</blockquote>\n<h3 id=\"_2-node-js项目typescript改造指南-二\"> 2. <a href=\"https://wecteam.io/2019/12/20/Node-js%E9%A1%B9%E7%9B%AETypeScript%E6%94%B9%E9%80%A0%E6%8C%87%E5%8D%97-%E4%BA%8C/\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js项目TypeScript改造指南(二)</a></h3>\n<p><strong>概述</strong></p>\n<p>主要描述 any 类型的危害与处理；如何搭建类型系统</p>\n<p><strong>关键词</strong></p>\n<p><code>any</code></p>\n<p><strong>主要内容</strong></p>\n<ul>\n<li>对any类型的处理\n<ul>\n<li>让any可控\n<ul>\n<li>用 unknown 作为顶级类型\n<ul>\n<li>如果一定要更改类型，先用 unknown 中转一下</li>\n</ul>\n</li>\n<li>类型守护\n<ul>\n<li>使用 in 操作符、typeof、instanceof 来收窄类型</li>\n</ul>\n</li>\n<li>类型断言\n<ul>\n<li>as</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>尽量不要使用类型断言\n<ul>\n<li>可能被断言成一个不正确的类型，导致系统的误判</li>\n</ul>\n</li>\n<li>覆盖第三方库的any\n<ul>\n<li>使用继承的方式重写接口，将any给覆盖掉</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>构建强大的类型系统\n<ul>\n<li>问题\n<ul>\n<li>存在很多相似的类型</li>\n</ul>\n</li>\n<li>接口继承\n<ul>\n<li>定义一个基本类型，其他类型继承这个基本类型并扩充</li>\n</ul>\n</li>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html#conditional-types\" target=\"_blank\" rel=\"noopener noreferrer\">类型推导</a>\n<ul>\n<li>T extends U ? X : Y</li>\n<li>结合 keyof、never、in 等特性获得一个类型的变体和衍生类型</li>\n</ul>\n</li>\n<li>可供使用的工具\n<ul>\n<li>交叉类型\n<ul>\n<li>A &amp; B：同时满足A和B</li>\n</ul>\n</li>\n<li>联合类型\n<ul>\n<li>A | B：满足A或B其中之一即可</li>\n</ul>\n</li>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#index-types\" target=\"_blank\" rel=\"noopener noreferrer\">索引类型</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types\" target=\"_blank\" rel=\"noopener noreferrer\">映射类型</a></li>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html#conditional-types\" target=\"_blank\" rel=\"noopener noreferrer\">条件类型</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>注意几个特殊的关键词\n<ul>\n<li>never：表示不可到达。\n<ol>\n<li>一个从来不会有返回值的函数: 函数内含有 while(true){}</li>\n<li>一个总是会抛出错误的函数: function foo() {throw new Error('Empty')}</li>\n</ol>\n</li>\n<li>infer\n<ul>\n<li><mark>TODO</mark></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>基础库中提供的抽象类型\n<ul>\n<li>Partial</li>\n<li>Required</li>\n<li>Readonly</li>\n<li>……</li>\n</ul>\n</li>\n<li>收窄类型\n<ul>\n<li><mark>TODO</mark></li>\n</ul>\n</li>\n</ul>\n<p><strong>反思</strong></p>\n<blockquote>\n<ol>\n<li>不要使用any，杜绝any。</li>\n<li>之前根本没有使用过TS提供的抽象类型，甚至都不知道有这个东西。平常也是简单的定义了一下接口，对于TS一些不常见的用法了解和实践的比较少。以后在使用TS的时候，如果发现某个地方使用TS的现状不太令人满意，那么可以想想有没有更优的实践方法。善用Typescript的类型工具以及内置的抽象类型，需要更深入的研究探索。</li>\n<li>如果我们把一个类型看做一组规则组成的 Map，key 是属性名，value 是类型，keyof 使我们有了取得所有 key 的能力。</li>\n<li>in 使我们有了对一个索引类型/联合类型遍历、重新设置每个属性的类型的能力。</li>\n</ol>\n</blockquote>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "知识点",
      "url": "https://hbuecx.com/fontEnd/learning/knowledge/",
      "id": "https://hbuecx.com/fontEnd/learning/knowledge/",
      "content_html": "<h2 id=\"按照指定进制读取字符串并转换为数字\"> 按照指定进制读取字符串并转换为数字</h2>\n<div><pre><code><span>parseInt</span><span>(</span><span>'11'</span><span>,</span> <span>2</span><span>)</span><span>;</span> <span>// 3</span>\n</code></pre>\n<div><span>1</span><br></div></div><h2 id=\"将数字转换为指定进制的字符串\"> 将数字转换为指定进制的字符串</h2>\n<div><pre><code><span>(</span><span>65</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>5</span><span>)</span><span>;</span> <span>// 230</span>\n</code></pre>\n<div><span>1</span><br></div></div>",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "网络",
      "url": "https://hbuecx.com/fontEnd/network/",
      "id": "https://hbuecx.com/fontEnd/network/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "http",
      "url": "https://hbuecx.com/fontEnd/network/http/",
      "id": "https://hbuecx.com/fontEnd/network/http/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "http2.0",
      "url": "https://hbuecx.com/fontEnd/network/http2.0/",
      "id": "https://hbuecx.com/fontEnd/network/http2.0/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "http3.0",
      "url": "https://hbuecx.com/fontEnd/network/http3.0/",
      "id": "https://hbuecx.com/fontEnd/network/http3.0/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "https",
      "url": "https://hbuecx.com/fontEnd/network/https/",
      "id": "https://hbuecx.com/fontEnd/network/https/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "七层网络模型",
      "url": "https://hbuecx.com/fontEnd/network/model/",
      "id": "https://hbuecx.com/fontEnd/network/model/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "tcp",
      "url": "https://hbuecx.com/fontEnd/network/tcp/",
      "id": "https://hbuecx.com/fontEnd/network/tcp/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "udp",
      "url": "https://hbuecx.com/fontEnd/network/udp/",
      "id": "https://hbuecx.com/fontEnd/network/udp/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "websocket",
      "url": "https://hbuecx.com/fontEnd/network/websocket/",
      "id": "https://hbuecx.com/fontEnd/network/websocket/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "Node",
      "url": "https://hbuecx.com/fontEnd/node/",
      "id": "https://hbuecx.com/fontEnd/node/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "异常处理",
      "url": "https://hbuecx.com/fontEnd/node/catch/",
      "id": "https://hbuecx.com/fontEnd/node/catch/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "cluster原理",
      "url": "https://hbuecx.com/fontEnd/node/cluster/",
      "id": "https://hbuecx.com/fontEnd/node/cluster/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "进程通信",
      "url": "https://hbuecx.com/fontEnd/node/communication/",
      "id": "https://hbuecx.com/fontEnd/node/communication/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "事件循环",
      "url": "https://hbuecx.com/fontEnd/node/loop/",
      "id": "https://hbuecx.com/fontEnd/node/loop/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "模块机制",
      "url": "https://hbuecx.com/fontEnd/node/module/",
      "id": "https://hbuecx.com/fontEnd/node/module/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "pipe原理",
      "url": "https://hbuecx.com/fontEnd/node/pipe/",
      "id": "https://hbuecx.com/fontEnd/node/pipe/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "守护进程",
      "url": "https://hbuecx.com/fontEnd/node/provide/",
      "id": "https://hbuecx.com/fontEnd/node/provide/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "require原理",
      "url": "https://hbuecx.com/fontEnd/node/require/",
      "id": "https://hbuecx.com/fontEnd/node/require/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "流机制",
      "url": "https://hbuecx.com/fontEnd/node/stream/",
      "id": "https://hbuecx.com/fontEnd/node/stream/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "其他",
      "url": "https://hbuecx.com/fontEnd/others/",
      "id": "https://hbuecx.com/fontEnd/others/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "性能",
      "url": "https://hbuecx.com/fontEnd/performance/",
      "id": "https://hbuecx.com/fontEnd/performance/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "动画性能",
      "url": "https://hbuecx.com/fontEnd/performance/animation/",
      "id": "https://hbuecx.com/fontEnd/performance/animation/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "白屏",
      "url": "https://hbuecx.com/fontEnd/performance/hang/",
      "id": "https://hbuecx.com/fontEnd/performance/hang/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "大量图片加载优化",
      "url": "https://hbuecx.com/fontEnd/performance/images/",
      "id": "https://hbuecx.com/fontEnd/performance/images/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "前端性能优化指标RAIL",
      "url": "https://hbuecx.com/fontEnd/performance/indicator/",
      "id": "https://hbuecx.com/fontEnd/performance/indicator/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "前端性能优化手段",
      "url": "https://hbuecx.com/fontEnd/performance/optimize/",
      "id": "https://hbuecx.com/fontEnd/performance/optimize/",
      "content_html": "<p>暂无内容\nhttps://juejin.cn/post/6892994632968306702</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "重绘和重排",
      "url": "https://hbuecx.com/fontEnd/performance/redraw/",
      "id": "https://hbuecx.com/fontEnd/performance/redraw/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "渲染合成层",
      "url": "https://hbuecx.com/fontEnd/performance/render/",
      "id": "https://hbuecx.com/fontEnd/performance/render/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "性能监控与数据上报",
      "url": "https://hbuecx.com/fontEnd/performance/report/",
      "id": "https://hbuecx.com/fontEnd/performance/report/",
      "content_html": "<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://juejin.cn/post/6844903998412029959\" target=\"_blank\" rel=\"noopener noreferrer\">前端性能和错误监控</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "从输入URL到浏览器渲染的全过程",
      "url": "https://hbuecx.com/fontEnd/performance/url/",
      "id": "https://hbuecx.com/fontEnd/performance/url/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "高阶组件",
      "url": "https://hbuecx.com/fontEnd/react/HOC/",
      "id": "https://hbuecx.com/fontEnd/react/HOC/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "React",
      "url": "https://hbuecx.com/fontEnd/react/",
      "id": "https://hbuecx.com/fontEnd/react/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "virtual dom",
      "url": "https://hbuecx.com/fontEnd/react/VDom/",
      "id": "https://hbuecx.com/fontEnd/react/VDom/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "错误处理",
      "url": "https://hbuecx.com/fontEnd/react/error/",
      "id": "https://hbuecx.com/fontEnd/react/error/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "fiber",
      "url": "https://hbuecx.com/fontEnd/react/fiber/",
      "id": "https://hbuecx.com/fontEnd/react/fiber/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "setState过程",
      "url": "https://hbuecx.com/fontEnd/react/setState/",
      "id": "https://hbuecx.com/fontEnd/react/setState/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "性能优化",
      "url": "https://hbuecx.com/fontEnd/react/performance/",
      "id": "https://hbuecx.com/fontEnd/react/performance/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "合成事件",
      "url": "https://hbuecx.com/fontEnd/react/synthetic/",
      "id": "https://hbuecx.com/fontEnd/react/synthetic/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "博客主页",
      "url": "https://hbuecx.com/fontEnd/",
      "id": "https://hbuecx.com/fontEnd/",
      "content_html": "",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "Redux",
      "url": "https://hbuecx.com/fontEnd/redux/",
      "id": "https://hbuecx.com/fontEnd/redux/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "幻灯片页",
      "url": "https://hbuecx.com/fontEnd/slides/",
      "id": "https://hbuecx.com/fontEnd/slides/",
      "content_html": "\n<i>Not supported content</i>",
      "image": "https://hbuecx.com/fontEnd/logo.svg",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "操作系统",
      "url": "https://hbuecx.com/fontEnd/system/",
      "id": "https://hbuecx.com/fontEnd/system/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "进程通信",
      "url": "https://hbuecx.com/fontEnd/system/communication/",
      "id": "https://hbuecx.com/fontEnd/system/communication/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "死锁",
      "url": "https://hbuecx.com/fontEnd/system/lock/",
      "id": "https://hbuecx.com/fontEnd/system/lock/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "IO多路复用",
      "url": "https://hbuecx.com/fontEnd/system/io/",
      "id": "https://hbuecx.com/fontEnd/system/io/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "进程与线程",
      "url": "https://hbuecx.com/fontEnd/system/process/",
      "id": "https://hbuecx.com/fontEnd/system/process/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "进程调度策略",
      "url": "https://hbuecx.com/fontEnd/system/schedule/",
      "id": "https://hbuecx.com/fontEnd/system/schedule/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "Vue",
      "url": "https://hbuecx.com/fontEnd/vue/",
      "id": "https://hbuecx.com/fontEnd/vue/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "数据绑定原理",
      "url": "https://hbuecx.com/fontEnd/vue/bind/",
      "id": "https://hbuecx.com/fontEnd/vue/bind/",
      "content_html": "<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://segmentfault.com/a/1190000006599500\" target=\"_blank\" rel=\"noopener noreferrer\">剖析Vue原理&amp;实现双向绑定MVVM</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "computed和watch",
      "url": "https://hbuecx.com/fontEnd/vue/computed/",
      "id": "https://hbuecx.com/fontEnd/vue/computed/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "样式隔离",
      "url": "https://hbuecx.com/fontEnd/vue/css/",
      "id": "https://hbuecx.com/fontEnd/vue/css/",
      "content_html": "<div><p>vue实现样式隔离的方式有几种？其原理分别是什么？</p>\n<p>css module\nscoped</p>\n</div>\n<h2 id=\"参考\"> 参考</h2>\n<ol>\n<li><a href=\"https://juejin.cn/post/6844903826198102030\" target=\"_blank\" rel=\"noopener noreferrer\">[深入探索] VueJS Scoped CSS 实现原理</a>.</li>\n</ol>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "data函数",
      "url": "https://hbuecx.com/fontEnd/vue/data/",
      "id": "https://hbuecx.com/fontEnd/vue/data/",
      "content_html": "<div><p>为什么data必须是return一个对象的函数？</p>\n</div>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "keep alive",
      "url": "https://hbuecx.com/fontEnd/vue/keepAlive/",
      "id": "https://hbuecx.com/fontEnd/vue/keepAlive/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "next tick原理",
      "url": "https://hbuecx.com/fontEnd/vue/nextTick/",
      "id": "https://hbuecx.com/fontEnd/vue/nextTick/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "slot",
      "url": "https://hbuecx.com/fontEnd/vue/slot/",
      "id": "https://hbuecx.com/fontEnd/vue/slot/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "Vuex",
      "url": "https://hbuecx.com/fontEnd/vuex/",
      "id": "https://hbuecx.com/fontEnd/vuex/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "computed 与 watch",
      "url": "https://hbuecx.com/fontEnd/vuex/computed/",
      "id": "https://hbuecx.com/fontEnd/vuex/computed/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "redux核心逻辑",
      "url": "https://hbuecx.com/fontEnd/redux/logic/",
      "id": "https://hbuecx.com/fontEnd/redux/logic/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    },
    {
      "title": "redux核心原则",
      "url": "https://hbuecx.com/fontEnd/redux/rule/",
      "id": "https://hbuecx.com/fontEnd/redux/rule/",
      "content_html": "<p>暂无内容</p>\n",
      "date_published": "2021-04-21T11:21:00.000Z",
      "date_modified": "2021-04-21T11:21:00.000Z",
      "authors": [
        {
          "name": "白山"
        }
      ],
      "tags": []
    }
  ]
}